zib-Procedure:
  zib deviations:
    Procedure.code:
      - cardinality: 0..1
        reason: The zib profiles should relax the minimum cardinality from the zibs because of the conceptual cardinality concept.
    Procedure.focalDevice.manipulated:
      - cardinality: 1..1
        reason: The cardinality mismatch between the zib (0..*) and FHIR (1..1) is explained by the parent container, Procedure.focalDevice, that has a cardinality of 0..*.
    Procedure.performer.actor:
      - cardinality: 1..1
        reason: The cardinality mismatch between the zib (0..*) and FHIR (1..1) is explained by a parent container, Procedure.performer, that has a cardinality of 0..*.
    Procedure.extension:procedureMethod.value[x]:
      - cardinality: 1..1
        reason: The used extension makes the value required (1..1), but the use of the extension itself is optional (0..*), effectively resulting a cardinality of 0..* for this element.
    Procedure.bodySite:
      - datatype: CodeableConcept
        reason: The referenced zib AnatomicalLocation is profiled on a datatype level and not a resource. Therefore it cannot be referenced, rather its concepts and constraints are added inline. This element conforms to the zib AnatomicalLocation.
        
zib-Procedure-ServiceRequest:
  zib deviations:
    ServiceRequest.bodySite:
      - datatype: CodeableConcept
        reason: The referenced zib AnatomicalLocation is profiled on a datatype level and not a resource. Therefore it cannot be referenced, rather its concepts and constraints are added inline. This element conforms to the zib AnatomicalLocation.
    ServiceRequest.requester:
      - cardinality: 0..1
        reason: Known issue - cardinality difference between FHIR (0..1) and zib (0..*), as documented here https://github.com/Nictiz/Nictiz-R4-zib2020/issues/69
        